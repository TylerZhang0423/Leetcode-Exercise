//866. 回文素数
//求出大于或等于 N 的最小回文素数。
//回顾一下，如果一个数大于 1，且其因数只有 1 和它自身，那么这个数是素数。
//例如，2，3，5，7，11 以及 13 是素数。
//回顾一下，如果一个数从左往右读与从右往左读是一样的，那么这个数是回文数。
//例如，12321 是回文数。
//示例 1：
//输入：6
//输出：7
//示例 2：
//输入：8
//输出：11
//示例 3：
//输入：13
//输出：101
//提示：
//1 <= N <= 10^8
//答案肯定存在，且小于 2 * 10^8。
package primepalindrome;

public class MainTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		long a=System.currentTimeMillis();
		int TESTSOLUTION=9989900;
		Solution Test=new Solution();
		System.out.println(Test.primePalindrome(TESTSOLUTION));
		System.out.println("执行耗时 : "+(System.currentTimeMillis()-a)/1000f+" 秒 ");
	}
}
