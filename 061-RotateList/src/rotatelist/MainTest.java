//61. 旋转链表
//给定一个链表，旋转链表，将链表每个节点向右移动 k 个位置，其中 k 是非负数。
//示例 1:
//输入: 1->2->3->4->5->NULL, k = 2
//输出: 4->5->1->2->3->NULL
//解释:
//向右旋转 1 步: 5->1->2->3->4->NULL
//向右旋转 2 步: 4->5->1->2->3->NULL
//示例 2:
//输入: 0->1->2->NULL, k = 4
//输出: 2->0->1->NULL
//解释:
//向右旋转 1 步: 2->0->1->NULL
//向右旋转 2 步: 1->2->0->NULL
//向右旋转 3 步: 0->1->2->NULL
//向右旋转 4 步: 2->0->1->NULL
package rotatelist;

public class MainTest {

	public static void main(String[] args) {
		// TODO Auto-generated method stub
		ListNode head=new ListNode(1);
		ListNode current=head;
		current.next=new ListNode(2);
		current=current.next;
		current.next=new ListNode(3);
		current=current.next;
		current.next=new ListNode(4);
		current=current.next;
		current.next=new ListNode(5);
		current=current.next;
		int K=2;
		Solution Test=new Solution();
		ListNode res=Test.rotateRight(head, K);
		while (res.next!=null) {
			System.out.print(res.val+"-->");
			res=res.next;
		}
		System.out.print(res.val);
	}
}
